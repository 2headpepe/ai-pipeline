version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ai_pipeline
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./images:/app/images
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d ai_pipeline" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile.backend
    platform: linux/amd64
    ports:
      - "8080:8080"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: ai_pipeline
      NODE_ENV: development
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c " while ! nc -z postgres 5432; do sleep 1; done && [ ! -f /tmp/.migrated ] &&  npm run migration:run &&  touch /tmp/.migrated && npm run start:dev "

volumes:
  postgres_data:
